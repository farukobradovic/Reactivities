[{"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"12","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"13","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivitiyListItem.tsx":"14","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"15","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"16","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"17","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSideBar.tsx":"18","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"19","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx":"20","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx":"21","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx":"22","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\options\\CategoryOptions.ts":"23","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx":"24","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts":"25","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"26","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts":"27","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts":"28","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\user\\LoginForm.tsx":"29","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"30","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts":"31","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"32","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\ErrorMessage.tsx":"33","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\user\\RegisterForm.tsx":"34","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAtendees.tsx":"35","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePage.tsx":"36","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileHeader.tsx":"37","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileContent.tsx":"38","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\profileStore.ts":"39","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx":"40","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoUploadWIdget.tsx":"41","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoWidgetDropzone.tsx":"42","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoWidgetCropper.tsx":"43","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileDescription.tsx":"44","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileEditForm.tsx":"45","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileFollowings.tsx":"46","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileCard.tsx":"47","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"48","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileActivities.tsx":"49"},{"size":929,"mtime":1608064944722,"results":"50","hashOfConfig":"51"},{"size":425,"mtime":499162500000,"results":"52","hashOfConfig":"51"},{"size":2562,"mtime":1608065177980,"results":"53","hashOfConfig":"51"},{"size":1861,"mtime":1608060896401,"results":"54","hashOfConfig":"51"},{"size":1669,"mtime":1608321193489,"results":"55","hashOfConfig":"51"},{"size":1030,"mtime":1607807854988,"results":"56","hashOfConfig":"51"},{"size":1535,"mtime":1608230055694,"results":"57","hashOfConfig":"51"},{"size":6557,"mtime":1607807939296,"results":"58","hashOfConfig":"51"},{"size":4895,"mtime":1608327539405,"results":"59","hashOfConfig":"51"},{"size":326,"mtime":1607113234250,"results":"60","hashOfConfig":"51"},{"size":9769,"mtime":1608323501253,"results":"61","hashOfConfig":"51"},{"size":1922,"mtime":1607880148022,"results":"62","hashOfConfig":"51"},{"size":293,"mtime":1607295101830,"results":"63","hashOfConfig":"51"},{"size":2501,"mtime":1608065487660,"results":"64","hashOfConfig":"51"},{"size":2679,"mtime":1608232651633,"results":"65","hashOfConfig":"51"},{"size":1526,"mtime":1607550825336,"results":"66","hashOfConfig":"51"},{"size":2619,"mtime":1608061225188,"results":"67","hashOfConfig":"51"},{"size":1700,"mtime":1608295658530,"results":"68","hashOfConfig":"51"},{"size":551,"mtime":1607374518080,"results":"69","hashOfConfig":"51"},{"size":721,"mtime":1607542325157,"results":"70","hashOfConfig":"51"},{"size":675,"mtime":1607543599293,"results":"71","hashOfConfig":"51"},{"size":846,"mtime":1607544060334,"results":"72","hashOfConfig":"51"},{"size":346,"mtime":1607543943369,"results":"73","hashOfConfig":"51"},{"size":1029,"mtime":1607618062211,"results":"74","hashOfConfig":"51"},{"size":1033,"mtime":1607970682376,"results":"75","hashOfConfig":"51"},{"size":1403,"mtime":1608327915361,"results":"76","hashOfConfig":"51"},{"size":864,"mtime":1608063249307,"results":"77","hashOfConfig":"51"},{"size":2074,"mtime":1607984726000,"results":"78","hashOfConfig":"51"},{"size":2104,"mtime":1607877951067,"results":"79","hashOfConfig":"51"},{"size":958,"mtime":1607867062446,"results":"80","hashOfConfig":"51"},{"size":606,"mtime":1607876801129,"results":"81","hashOfConfig":"51"},{"size":546,"mtime":1607876690599,"results":"82","hashOfConfig":"51"},{"size":725,"mtime":1607880555958,"results":"83","hashOfConfig":"51"},{"size":2422,"mtime":1607880187986,"results":"84","hashOfConfig":"51"},{"size":812,"mtime":1608296004080,"results":"85","hashOfConfig":"51"},{"size":1400,"mtime":1608301829789,"results":"86","hashOfConfig":"51"},{"size":2360,"mtime":1608298547612,"results":"87","hashOfConfig":"51"},{"size":986,"mtime":1608328026756,"results":"88","hashOfConfig":"51"},{"size":6878,"mtime":1608327792421,"results":"89","hashOfConfig":"51"},{"size":3168,"mtime":1608140798500,"results":"90","hashOfConfig":"51"},{"size":2234,"mtime":1608121975074,"results":"91","hashOfConfig":"51"},{"size":1208,"mtime":1608116330462,"results":"92","hashOfConfig":"51"},{"size":1035,"mtime":1608119647160,"results":"93","hashOfConfig":"51"},{"size":1313,"mtime":1608144805101,"results":"94","hashOfConfig":"51"},{"size":1587,"mtime":1608144831316,"results":"95","hashOfConfig":"51"},{"size":1267,"mtime":1608302545405,"results":"96","hashOfConfig":"51"},{"size":733,"mtime":1608300420806,"results":"97","hashOfConfig":"51"},{"size":1619,"mtime":1608324019506,"results":"98","hashOfConfig":"51"},{"size":2752,"mtime":1608327877427,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"f9sps8",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\index.tsx",[],["209","210"],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["211"],"import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\n\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Route,\n  RouteComponentProps,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport NotFound from \"./NotFound\";\nimport { ToastContainer } from \"react-toastify\";\nimport { LoginForm } from \"../../features/user/LoginForm\";\nimport { RootStoreContext } from \"../stores/rootStore\";\nimport { LoadingComponent } from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const rootStore = useContext(RootStoreContext);\n  const { setAppLoaded, token, appLoaded } = rootStore.commonStore;\n  const { getUser } = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded());\n    } else {\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token]);\n\n  if (!appLoaded) return <LoadingComponent content='Loading application...' />;\n\n  return (\n    <Fragment>\n      <ModalContainer />\n      <ToastContainer position='bottom-right' />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <Route exact path='/activities' component={ActivityDashboard} />\n                <Route\n                  exact\n                  path='/activities/:id'\n                  component={ActivityDetails}\n                />\n                <Route\n                  key={location.key}\n                  exact\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <Route path='/profile/:username' component={ProfilePage} />\n                {/* <Route path='/login' component={LoginForm} /> */}\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",["212"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Menu, Container, Button, Dropdown, Image } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn, user, logout } = rootStore.userStore;\r\n  return (\r\n    <div>\r\n      <Menu inverted fixed='top'>\r\n        <Container>\r\n          <Menu.Item header as={NavLink} exact to='/'>\r\n            <img\r\n              src='/assets/logo.png'\r\n              alt='logo'\r\n              style={{ marginRight: \"10px\" }}\r\n            ></img>\r\n            Reactivities\r\n          </Menu.Item>\r\n          <Menu.Item name='Activities' as={NavLink} to='/activities' />\r\n          <Menu.Item>\r\n            <Button\r\n              as={NavLink}\r\n              to='/createActivity'\r\n              positive\r\n              content='Create Activity'\r\n            />\r\n          </Menu.Item>\r\n          {user && (\r\n            <Menu.Item position='right'>\r\n              <Image\r\n                avatar\r\n                spaced='right'\r\n                src={user.image || \"/assets/user.png\"}\r\n              />\r\n              <Dropdown pointing='top left' text={user.displayName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/profile/${user.username}`}\r\n                    text='My profile'\r\n                    icon='user'\r\n                  />\r\n                  <Dropdown.Item text='Logout' icon='power' onClick={logout} />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Menu.Item>\r\n          )}\r\n        </Container>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["213"],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["214","215"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment, useContext } from \"react\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport ActivityStore from \"../../../app/stores/activityStore\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport ActivitiyListItem from \"./ActivitiyListItem\";\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { activitiesByDate, deleteActivity } = rootStore.activityStore;\r\n  return (\r\n    <Fragment>\r\n      {activitiesByDate.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Label size='large' color='blue'>\r\n            {group}\r\n          </Label>\r\n          <Item.Group divided>\r\n            {activities.map((activity) => (\r\n              <ActivitiyListItem key={activity.id} activity={activity} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n// export default ActivityList;\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["216","217","218"],"import React, { useState, FormEvent, useContext, useEffect } from \"react\";\r\nimport { Button, Form, Grid, Segment } from \"semantic-ui-react\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ActivityStore from \"../../../app/stores/activityStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport { TextAreaInput } from \"../../../app/common/form/TextAreaInput\";\r\nimport SelectInput from \"../../../app/common/form/SelectInput\";\r\nimport { category } from \"../../../app/common/options/CategoryOptions\";\r\nimport DateInput from \"../../../app/common/form/DateInput\";\r\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\r\nimport {\r\n  combineValidators,\r\n  composeValidators,\r\n  hasLengthGreaterThan,\r\n  isRequired,\r\n} from \"revalidate\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({ message: \"The event title is required\" }),\r\n  category: isRequired(\"Category\"),\r\n  description: composeValidators(\r\n    isRequired(\"Description\"),\r\n    hasLengthGreaterThan(4)({\r\n      message: \"Description needs to be at least 5 characters\",\r\n    })\r\n  )(),\r\n  city: isRequired(\"City\"),\r\n  venue: isRequired(\"Venue\"),\r\n  date: isRequired(\"Date\"),\r\n  time: isRequired(\"Time\"),\r\n});\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history,\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createActivity,\r\n    editActivity,\r\n    submitting,\r\n    activity: initialFormState,\r\n    loadActivity,\r\n  } = rootStore.activityStore;\r\n\r\n  // const initializeForm = () => {\r\n  //   if (initialFormState) {\r\n  //     return initialFormState;\r\n  //   } else {\r\n  //     return {\r\n  //       id: \"\",\r\n  //       title: \"\",\r\n  //       category: \"\",\r\n  //       description: \"\",\r\n  //       date: undefined,\r\n  //       time: undefined,\r\n  //       city: \"\",\r\n  //       venue: \"\",\r\n  //     };\r\n  //   }\r\n  // };\r\n\r\n  const [activity, setActivity] = useState(new ActivityFormValues());\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      setLoading(true);\r\n      loadActivity(match.params.id)\r\n        .then(\r\n          //ovdje vracamo activity inace bi bio promise\r\n          (activity) => setActivity(new ActivityFormValues(activity))\r\n        )\r\n        .finally(() => setLoading(false));\r\n    }\r\n  }, [loadActivity, match.params.id]);\r\n\r\n  // const handleSubmit = () => {\r\n  //   if (activity.id.length === 0) {\r\n  //     let newActivity = {\r\n  //       ...activity,\r\n  //       id: uuid(),\r\n  //     };\r\n  //     createActivity(newActivity).then(() =>\r\n  //       history.push(`/activities/${newActivity.id}`)\r\n  //     );\r\n  //   } else {\r\n  //     editActivity(activity).then(() =>\r\n  //       history.push(`/activities/${activity.id}`)\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  const handleFinalFormSubmit = (values: any) => {\r\n    const dateAndTime = combineDateAndTime(values.date, values.time);\r\n    const { date, time, ...activity } = values;\r\n    activity.date = dateAndTime;\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity);\r\n    } else {\r\n      editActivity(activity);\r\n    }\r\n  };\r\n  // const handleInputChange = (\r\n  //   e: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  // ) => {\r\n  //   setActivity({ ...activity, [e.currentTarget.name]: e.currentTarget.value });\r\n  // };\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <Segment clearing>\r\n          <FinalForm\r\n            validate={validate}\r\n            initialValues={activity}\r\n            onSubmit={handleFinalFormSubmit}\r\n            render={({ handleSubmit, invalid, pristine }) => (\r\n              <Form onSubmit={handleSubmit} loading={loading}>\r\n                <Field\r\n                  placeholder='Title'\r\n                  value={activity.title}\r\n                  name='title'\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  placeholder='Description'\r\n                  value={activity.description}\r\n                  name='description'\r\n                  rows={3}\r\n                  component={TextAreaInput}\r\n                />\r\n                <Field\r\n                  placeholder='Category'\r\n                  value={activity.category}\r\n                  name='category'\r\n                  component={SelectInput}\r\n                  options={category}\r\n                />\r\n                <Form.Group widths='equal'>\r\n                  <Field\r\n                    component={DateInput}\r\n                    placeholder='Date'\r\n                    value={activity.date}\r\n                    name='date'\r\n                    date={true}\r\n                  />\r\n                  <Field\r\n                    component={DateInput}\r\n                    placeholder='Time'\r\n                    value={activity.date}\r\n                    name='time'\r\n                    time={true}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Field\r\n                  placeholder='City'\r\n                  value={activity.city}\r\n                  component={TextInput}\r\n                  name='city'\r\n                />\r\n                <Field\r\n                  placeholder='Venue'\r\n                  value={activity.venue}\r\n                  component={TextInput}\r\n                  name='venue'\r\n                />\r\n                <Button\r\n                  floated='right'\r\n                  positive\r\n                  type='submit'\r\n                  content='Submit'\r\n                  loading={submitting}\r\n                  disabled={loading || invalid || pristine}\r\n                />\r\n                <Button\r\n                  onClick={\r\n                    activity.id\r\n                      ? () => history.push(`/activities/${activity.id}`)\r\n                      : () => history.push(\"/activities\")\r\n                  }\r\n                  floated='right'\r\n                  type='button'\r\n                  content='Cancel'\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["219"],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivitiyListItem.tsx",["220"],"import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { ActivityListItemAtendees } from \"./ActivityListItemAtendees\";\r\n\r\nconst ActivitiyListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\r\n  const host = activity.attendees.filter((c) => c.isHost)[0];\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size='tiny'\r\n              circular\r\n              src={host.image || \"/assets/user.png\"}\r\n              style={{ marginBottom: 3 }}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted By{\" \"}\r\n                <Link to={`/profile/${host.username}`}>\r\n                  {\" \"}\r\n                  {host.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color='orange'\r\n                    content='You are hosting this activity'\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color='green'\r\n                    content='You are going to this activity'\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <Icon name='clock' />\r\n        {format(activity.date, \"h:mm:a\")}\r\n        <Icon name='marker' />\r\n        {activity.venue}, {activity.city}\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAtendees attendees={activity.attendees} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          floated='right'\r\n          content='View'\r\n          color='blue'\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivitiyListItem;\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",["221"],"import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Segment, Header, Form, Button, Comment } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextAreaInput } from \"../../../app/common/form/TextAreaInput\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { formatDistance } from \"date-fns\";\r\n\r\nconst ActivityDetailedChat = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createHubConnection,\r\n    stopHubConnection,\r\n    addComment,\r\n    activity,\r\n  } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    createHubConnection(activity!.id);\r\n    return () => {\r\n      stopHubConnection();\r\n    };\r\n  }, [createHubConnection, stopHubConnection]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign='center'\r\n        attached='top'\r\n        inverted\r\n        color='teal'\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          {activity &&\r\n            activity.comments &&\r\n            activity.comments.map((comment) => (\r\n              <Comment key={comment.id}>\r\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n                <Comment.Content>\r\n                  <Comment.Author as={Link} to={`/profile/${comment.username}`}>\r\n                    {comment.displayName}\r\n                  </Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div>{formatDistance(comment.createdAt, new Date())}</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>{comment.body}</Comment.Text>\r\n                </Comment.Content>\r\n              </Comment>\r\n            ))}\r\n\r\n          <FinalForm\r\n            onSubmit={addComment}\r\n            render={({ handleSubmit, submitting, form }) => (\r\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\r\n                <Field\r\n                  name='body'\r\n                  component={TextAreaInput}\r\n                  rows={2}\r\n                  placeholder='Add your comment'\r\n                />\r\n                <Button\r\n                  loading={submitting}\r\n                  content='Add Reply'\r\n                  labelPosition='left'\r\n                  icon='edit'\r\n                  primary\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedChat);\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSideBar.tsx",["222"],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\options\\CategoryOptions.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\user\\LoginForm.tsx",["223"],"import { FORM_ERROR } from \"final-form\";\r\nimport React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\r\nimport { ErrorMessage } from \"../../app/common/form/ErrorMessage\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst validate = combineValidators({\r\n  email: isRequired(\"email\"),\r\n  password: isRequired(\"password\"),\r\n});\r\n\r\nexport const LoginForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { login } = rootStore.userStore;\r\n\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        login(values).catch((err) => ({\r\n          [FORM_ERROR]: err,\r\n        }))\r\n      }\r\n      validate={validate}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        form,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header\r\n            as='h2'\r\n            content='Login Reactivities'\r\n            color='teal'\r\n            textAlign='center'\r\n          />\r\n          <Field name='email' component={TextInput} placeholder='Email' />\r\n          <Field\r\n            name='password'\r\n            component={TextInput}\r\n            placeholder='Password'\r\n            type='password'\r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErrorMessage\r\n              error={submitError}\r\n              text='Invalid email or password'\r\n            />\r\n          )}\r\n          <Button\r\n            color='teal'\r\n            content='Login'\r\n            loading={submitting}\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            fluid\r\n          />\r\n          {/* <pre>{JSON.stringify(form.getState(), null, 2)}</pre> */}\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\form\\ErrorMessage.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\user\\RegisterForm.tsx",["224"],"import { FORM_ERROR } from \"final-form\";\r\nimport React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\r\nimport { ErrorMessage } from \"../../app/common/form/ErrorMessage\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst validate = combineValidators({\r\n  email: isRequired(\"email\"),\r\n  password: isRequired(\"password\"),\r\n  username: isRequired(\"username\"),\r\n  displayName: isRequired(\"displayName\"),\r\n});\r\n\r\nexport const RegisterForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { register } = rootStore.userStore;\r\n\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        register(values).catch((err) => ({\r\n          [FORM_ERROR]: err,\r\n        }))\r\n      }\r\n      validate={validate}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        form,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header\r\n            as='h2'\r\n            content='Sign Up to Reactivities'\r\n            color='teal'\r\n            textAlign='center'\r\n          />\r\n          <Field name='username' component={TextInput} placeholder='Username' />\r\n          <Field\r\n            name='displayName'\r\n            component={TextInput}\r\n            placeholder='Display Name'\r\n          />\r\n          <Field name='email' component={TextInput} placeholder='Email' />\r\n          <Field\r\n            name='password'\r\n            component={TextInput}\r\n            placeholder='Password'\r\n            type='password'\r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErrorMessage\r\n              error={submitError}\r\n              text='Invalid email or password'\r\n            />\r\n          )}\r\n          <Button\r\n            color='teal'\r\n            content='Register'\r\n            loading={submitting}\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            fluid\r\n          />\r\n          {/* <pre>{JSON.stringify(form.getState(), null, 2)}</pre> */}\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAtendees.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePage.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileHeader.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileContent.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\stores\\profileStore.ts",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoUploadWIdget.tsx",["225"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Header, Grid, Image, Button } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport { PhotoWidgetCropper } from \"./PhotoWidgetCropper\";\r\n\r\ninterface IProps {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWidget: React.FC<IProps> = ({ loading, uploadPhoto }) => {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [image, setImage] = useState<Blob | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n      //Nesto kao unmunt, obrisemo iz memorije\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <Header color='teal' sub content='Step 1 - Add Photo' />\r\n          <PhotoWidgetDropzone setFiles={setFiles} />\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color='teal' content='Step 2 - Resize image' />\r\n          {files.length > 0 && (\r\n            <PhotoWidgetCropper\r\n              setImage={setImage}\r\n              imagePreview={files[0].preview}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n          {files.length > 0 && (\r\n            <Fragment>\r\n              <div\r\n                className='img-preview'\r\n                style={{ minHeight: \"200px\", overflow: \"hidden\" }}\r\n              />\r\n              <Button.Group widths={2}>\r\n                <Button\r\n                  positive\r\n                  icon='check'\r\n                  loading={loading}\r\n                  onClick={() => uploadPhoto(image!)}\r\n                />\r\n                <Button\r\n                  icon='close'\r\n                  disabled={loading}\r\n                  onClick={() => setFiles([])}\r\n                />\r\n              </Button.Group>\r\n            </Fragment>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(PhotoUploadWidget);\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoWidgetDropzone.tsx",["226"],"import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  setFiles: (files: object[]) => void;\r\n}\r\n\r\nconst dropzoneStyle = {\r\n  border: \"dashed 3px\",\r\n  borderColor: \"#eee\",\r\n  borderRadius: \"5px\",\r\n  paddingTop: \"3px\",\r\n  textAlign: \"center\" as \"center\",\r\n  height: \"200px\",\r\n};\r\nconst dropzoneActive = {\r\n  borderColor: \"green\",\r\n};\r\n\r\nconst PhotoWidgetDropzone: React.FC<IProps> = ({ setFiles }) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Do something with the files\r\n    setFiles(\r\n      acceptedFiles.map((file: object) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive ? { ...dropzoneStyle, ...dropzoneActive } : dropzoneStyle\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetDropzone;\r\n","C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoWidgetCropper.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileDescription.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileEditForm.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileFollowings.tsx",["227","228"],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileCard.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"C:\\Users\\Faruk\\Desktop\\Reactivities\\client-app\\src\\features\\profiles\\ProfileActivities.tsx",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":18,"column":10,"nodeType":"235","messageId":"236","endLine":18,"endColumn":19},{"ruleId":"233","severity":1,"message":"237","line":9,"column":11,"nodeType":"235","messageId":"236","endLine":9,"endColumn":21},{"ruleId":"233","severity":1,"message":"238","line":6,"column":10,"nodeType":"235","messageId":"236","endLine":6,"endColumn":19},{"ruleId":"233","severity":1,"message":"239","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":21},{"ruleId":"233","severity":1,"message":"240","line":10,"column":29,"nodeType":"235","messageId":"236","endLine":10,"endColumn":43},{"ruleId":"233","severity":1,"message":"241","line":1,"column":27,"nodeType":"235","messageId":"236","endLine":1,"endColumn":36},{"ruleId":"233","severity":1,"message":"239","line":5,"column":8,"nodeType":"235","messageId":"236","endLine":5,"endColumn":21},{"ruleId":"233","severity":1,"message":"242","line":51,"column":15,"nodeType":"235","messageId":"236","endLine":51,"endColumn":31},{"ruleId":"243","severity":1,"message":"244","line":90,"column":1,"nodeType":"245","endLine":94,"endColumn":2},{"ruleId":"233","severity":1,"message":"246","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":27},{"ruleId":"247","severity":1,"message":"248","line":24,"column":6,"nodeType":"249","endLine":24,"endColumn":46,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":22,"column":46,"nodeType":"253","messageId":"254","endLine":22,"endColumn":48},{"ruleId":"233","severity":1,"message":"255","line":5,"column":32,"nodeType":"235","messageId":"236","endLine":5,"endColumn":37},{"ruleId":"233","severity":1,"message":"255","line":5,"column":32,"nodeType":"235","messageId":"236","endLine":5,"endColumn":37},{"ruleId":"233","severity":1,"message":"256","line":2,"column":24,"nodeType":"235","messageId":"236","endLine":2,"endColumn":29},{"ruleId":"247","severity":1,"message":"257","line":31,"column":6,"nodeType":"249","endLine":31,"endColumn":8,"suggestions":"258"},{"ruleId":"233","severity":1,"message":"259","line":1,"column":29,"nodeType":"235","messageId":"236","endLine":1,"endColumn":38},{"ruleId":"233","severity":1,"message":"260","line":11,"column":5,"nodeType":"235","messageId":"236","endLine":11,"endColumn":19},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"@typescript-eslint/no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","'isLoggedIn' is assigned a value but never used.","'RootStore' is defined but never used.","'ActivityStore' is defined but never used.","'deleteActivity' is assigned a value but never used.","'FormEvent' is defined but never used.","'initialFormState' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activity'. Either include it or remove the dependency array.","ArrayExpression",["263"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Label' is defined but never used.","'Image' is defined but never used.","React Hook useCallback has a missing dependency: 'setFiles'. Either include it or remove the dependency array. If 'setFiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"'useEffect' is defined but never used.","'loadFollowings' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [activity, createHubConnection, stopHubConnection]",{"range":"269","text":"270"},"Update the dependencies array to be: [setFiles]",{"range":"271","text":"272"},[815,855],"[activity, createHubConnection, stopHubConnection]",[771,773],"[setFiles]"]